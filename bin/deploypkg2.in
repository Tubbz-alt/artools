#!/bin/bash
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

version=@version@

LIBDIR='@libdir@'
SYSCONFDIR='@sysconfdir@'

[[ -r ${LIBDIR}/util-msg.sh ]] && source ${LIBDIR}/util-msg.sh
import ${LIBDIR}/util.sh
import ${LIBDIR}/util-pkg-publish.sh

display_settings(){
    show_version
    show_config

    msg "OPTIONS:"
    msg2 "repository: %s" "${repository}"
    msg2 "to_repository: %s" "${to_repository}"
    msg2 "package: %s" "${package[@]}"
    msg2 "target_arch: %s" "${target_arch}"

    msg "ARGS:"
    msg2 "add_pkg: %s" "${add_pkg}"
    msg2 "del_pkg: %s" "${del_pkg}"
    msg2 "move_pkg: %s" "${move_pkg}"
}

load_user_info

load_config "${AT_USERCONFDIR}/artools.conf" || load_config "${SYSCONFDIR}/artools.conf"
load_vars "${PAC_USERCONFDIR}/makepkg.conf" || load_vars "$USER_HOME/.makepkg.conf"
load_vars /etc/makepkg.conf

pretend=false
add_pkg=false
del_pkg=false
move_pkg=false
package=''
# repository=${PWD##*/}
# to_repository=${PWD##*/}

rsync_args=(-rtxisP --progress --delete -e ssh)

usage() {
    echo "Usage: ${0##*/} [options]"
    echo "    -a                 Repository arch [default:${target_arch}]"
    echo "    -r                 Repository [default:${repository}]"
    echo "    -t                 Repository to move to [default:${to_repository}]"
    echo "    -p                 Package name to add/delete"
    echo '    -x                 Add package to repository'
    echo '    -y                 Delete package from repository'
    echo '    -m                 Move packages from source to destination repository'
    echo '    -q                 Query settings and pretend upload'
    echo '    -h                 This help'
    echo ''
    echo ''
    exit $1
}

orig_argv=("$0" "$@")

opts='p:a:r:t:xymqh'

while getopts "${opts}" arg; do
    case "${arg}" in
        a) target_arch="$OPTARG" ;;
        r) repository="$OPTARG" ;;
        p) package="$OPTARG" ;;
        t) to_repository="$OPTARG" ;;
        m) move_pkg=true ;;
        x) add_pkg=true ;;
        y) del_pkg=true ;;
        q) pretend=true ;;
        h|?) usage 0 ;;
        *) echo "invalid argument '${arg}'"; usage 1 ;;
    esac
done

shift $(($OPTIND - 1))

timer_start=$(get_timer)

prepare_dir "${repos_root}"

${pretend} && display_settings && exit 1

${move_pkg} && move_to_repo "${repository}" "${to_repository}" "${target_arch}"

${del_pkg} && del_from_repo "${repository}" "${target_arch}" "${package}"

${add_pkg} && add_to_repo "${repository}" "${target_arch}" "${package}"

exit 0
